var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.ISOLATE_POLYFILLS=!1;$jscomp.FORCE_POLYFILL_PROMISE=!1;$jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION=!1;
$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a};$jscomp.getGlobal=function(a){a=["object"==typeof globalThis&&globalThis,a,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error("Cannot find global object");};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.IS_SYMBOL_NATIVE="function"===typeof Symbol&&"symbol"===typeof Symbol("x");$jscomp.TRUST_ES6_POLYFILLS=!$jscomp.ISOLATE_POLYFILLS||$jscomp.IS_SYMBOL_NATIVE;$jscomp.polyfills={};$jscomp.propertyToPolyfillSymbol={};$jscomp.POLYFILL_PREFIX="$jscp$";var $jscomp$lookupPolyfilledValue=function(a,b){var c=$jscomp.propertyToPolyfillSymbol[b];if(null==c)return a[b];c=a[c];return void 0!==c?c:a[b]};
$jscomp.polyfill=function(a,b,c,d){b&&($jscomp.ISOLATE_POLYFILLS?$jscomp.polyfillIsolated(a,b,c,d):$jscomp.polyfillUnisolated(a,b,c,d))};$jscomp.polyfillUnisolated=function(a,b,c,d){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];if(!(e in c))return;c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})};
$jscomp.polyfillIsolated=function(a,b,c,d){var e=a.split(".");a=1===e.length;d=e[0];d=!a&&d in $jscomp.polyfills?$jscomp.polyfills:$jscomp.global;for(var f=0;f<e.length-1;f++){var g=e[f];if(!(g in d))return;d=d[g]}e=e[e.length-1];c=$jscomp.IS_SYMBOL_NATIVE&&"es6"===c?d[e]:null;b=b(c);null!=b&&(a?$jscomp.defineProperty($jscomp.polyfills,e,{configurable:!0,writable:!0,value:b}):b!==c&&(void 0===$jscomp.propertyToPolyfillSymbol[e]&&(c=1E9*Math.random()>>>0,$jscomp.propertyToPolyfillSymbol[e]=$jscomp.IS_SYMBOL_NATIVE?
$jscomp.global.Symbol(e):$jscomp.POLYFILL_PREFIX+c+"$"+e),$jscomp.defineProperty(d,$jscomp.propertyToPolyfillSymbol[e],{configurable:!0,writable:!0,value:b})))};$jscomp.initSymbol=function(){};$jscomp.iteratorPrototype=function(a){a={next:a};a[Symbol.iterator]=function(){return this};return a};
$jscomp.iteratorFromArray=function(a,b){a instanceof String&&(a+="");var c=0,d=!1,e={next:function(){if(!d&&c<a.length){var f=c++;return{value:b(f,a[f]),done:!1}}d=!0;return{done:!0,value:void 0}}};e[Symbol.iterator]=function(){return e};return e};$jscomp.polyfill("Array.prototype.values",function(a){return a?a:function(){return $jscomp.iteratorFromArray(this,function(b,c){return c})}},"es8","es3");
class Strings{static toFixed(a,b){return a.toFixed(b)}static init(){const a=navigator.userLanguage||navigator.language;a&&0===a.toLowerCase().indexOf("pt")&&(Strings.language="pt-br",document.documentElement.setAttribute("lang","pt-br"),Strings.DecimalSeparator=",",Strings.OppositeDecimalSeparator=".",Strings.AntecedentEvaluation="Avalia\u00e7\u00e3o de Antecedente",Strings.AntecedentEvaluation1="Antecedente de ",Strings.AntecedentEvaluation2=" vale Verdadeiro por causa de",Strings.BiconditionalElimination=
"Elimina\u00e7\u00e3o de Bicondicional",Strings.ConsequentEvaluation="Avalia\u00e7\u00e3o de Consequente",Strings.ConsequentEvaluation1="Consequente de ",Strings.ConsequentEvaluation2=" vale Falso por causa de",Strings.ConstructiveDilemma="Dilema Construtivo",Strings.DestructiveDilemma="Dilema Destrutivo",Strings.DisjunctionElimination="Elimina\u00e7\u00e3o de Disjun\u00e7\u00e3o",Strings.DisjunctiveSyllogism="Silogismo Disjuntivo",Strings.HypotheticalSyllogism="Silogismo Hipot\u00e9tico",Strings.ModusPonens=
"Modus Ponens",Strings.ModusTollens="Modus Tollens",Strings.NegationIntroduction="Introdu\u00e7\u00e3o de Nega\u00e7\u00e3o",Strings.Simplification="Simplifica\u00e7\u00e3o",Strings.PleaseWait="Por favor, aguarde\u2026",Strings.Error="Erro",Strings.ICouldNotDeductAnythingElse="N\u00e3o consegui deduzir mais nada \ud83d\ude0a",Strings.False="Falso",Strings.True="Verdadeiro",Strings.New="Novo",Strings.Load="Abrir",Strings.LoadEllipsis="Abrir\u2026",Strings.Save="Salvar",Strings.SaveEllipsis="Salvar\u2026",
Strings.ShowExplanation="Mostrar Explica\u00e7\u00e3o\u2026",Strings.InstallEllipsis="Instalar\u2026",Strings.WrapMode="Quebra de Linha",Strings.Edit="Edit",Strings.Delete="Excluir",Strings.Enable="Habilitar",Strings.Disable="Desabilitar",Strings.Enabled="Habilitado",Strings.Disabled="Desabilitado",Strings.Explanation="Explica\u00e7\u00e3o",Strings.Cancel="Cancelar",Strings.Clear="Limpar",Strings.Back="Voltar",Strings.Close="Fechar",Strings.Refresh="Recarregar",Strings.Exit="Sair",Strings.ShowNextDeduction=
"Mostrar Pr\u00f3xima Dedu\u00e7\u00e3o",Strings.StopDeducting="Parar Dedu\u00e7\u00f5es",Strings.FileName="Nome do Arquivo",Strings.UnknownError="Erro desconhecido",Strings.Theme="Tema",Strings.ThemeEllipsis="Tema\u2026",Strings.BrowserNotSupported="Infelizmente seu navegador n\u00e3o suporta essa funcionalidade \ud83d\ude22",Strings.UpdateAvailable="Atualiza\u00e7\u00e3o Dispon\u00edvel!",Strings.PleaseRefresh="Por favor, recarregue a p\u00e1gina para atualizar a aplica\u00e7\u00e3o \ud83d\ude0a",
Strings.ConfirmQuit="Deseja mesmo sair da p\u00e1gina? Voc\u00ea perder\u00e1 o documento atual.",Strings.ConfirmClose="Deseja mesmo continuar? Voc\u00ea perder\u00e1 as altera\u00e7\u00f5es n\u00e3o salvas.",Strings.ErrorNoFile="Seu browser n\u00e3o oferece suporte a acesso avan\u00e7ado de arquivos \ud83d\ude22",Strings.ErrorFileLoad="Ocorreu um erro ao ler o arquivo \ud83d\ude22",Strings.ErrorFileSave="Ocorreu um erro ao gravar o arquivo \ud83d\ude22",Strings.ErrorDownload="Ocorreu um erro durante o download dos dados \ud83d\ude22",
Strings.ErrorInvalidFileName="Nome de arquivo inv\u00e1lido \ud83d\ude22",Strings.ErrorInvalidChar="Caractere inv\u00e1lido: ",Strings.ErrorUnexpectedEndOfCode="Fim de c\u00f3digo inesperado.",Strings.ErrorUnexpectedEndOfCodeUnaryExpected="Fim de c\u00f3digo inesperado. Era esperado uma vari\u00e1vel, nega\u00e7\u00e3o ou (.",Strings.ErrorUnexpectedEndOfLineUnaryExpected="T\u00e9rmino de linha inesperado. Era esperado uma vari\u00e1vel, nega\u00e7\u00e3o ou (.",Strings.ErrorEndOfLineExpected="Era esperado um t\u00e9rmino de linha.",
Strings.ErrorUnexpectedOperatorUnaryExpected="Operador inesperado. Era esperado uma vari\u00e1vel, nega\u00e7\u00e3o ou (.",Strings.ErrorUnaryExpected="Caractere inv\u00e1lido encontrado. Era esperado uma vari\u00e1vel, nega\u00e7\u00e3o ou (.",Strings.ErrorClosingParenthesisExpected="Era esperado um ).",Strings.ErrorClosingParenthesis2Expected="Era esperado um ].",Strings.ErrorClosingParenthesis3Expected="Era esperado um }.",Strings.ErrorClosingParenthesisOrOperatorExpected="Era esperado um ) ou um operador de conjun\u00e7\u00e3o, disjun\u00e7\u00e3o, implica\u00e7\u00e3o ou bicondicional.",
Strings.ErrorClosingParenthesis2OrOperatorExpected="Era esperado um ] ou um operador de conjun\u00e7\u00e3o, disjun\u00e7\u00e3o, implica\u00e7\u00e3o ou bicondicional.",Strings.ErrorClosingParenthesis3OrOperatorExpected="Era esperado um } ou um operador de conjun\u00e7\u00e3o, disjun\u00e7\u00e3o, implica\u00e7\u00e3o ou bicondicional.",Strings.ErrorConditionalOperatorExpected="Era esperado operador de implica\u00e7\u00e3o ou bicondicional.",Strings.ErrorOperatorExpected="Era esperado um operador de conjun\u00e7\u00e3o, disjun\u00e7\u00e3o, implica\u00e7\u00e3o ou bicondicional.",
Strings.ErrorVariableAlreadyAssignedToADifferentValue="Um valor diferente j\u00e1 havia sido atribu\u00eddo \u00e0 vari\u00e1vel: ",Strings.ErrorExpressionAlreadyAssignedToADifferentValue="Um valor diferente j\u00e1 havia sido atribu\u00eddo \u00e0 express\u00e3o: ",Strings.ErrorExpressionUsesTooManyVariables="A express\u00e3o utiliza mais de 16 vari\u00e1veis.",Strings.ErrorInconsistentAxioms="Premissas inconsistentes: ",Strings.ErrorInconsistentExpression="Express\u00e3o inconsistente: ",Strings.ErrorInconsistentExpression2=
" era avaliada como ",Strings.ErrorInconsistentExpression3because=" por causa de ",Strings.ErrorInconsistentExpression3=" mas agora \u00e9 avaliada como ",Strings.ErrorTooManyVariables="Mais de 256 vari\u00e1veis declaradas.",Strings.ErrorUnknownVariable="Vari\u00e1vel desconhecida: ",Strings.ExplanationBody="Operadores\n==========\n\n^ & . \u2227 \u22c5 podem ser utilizados como conjun\u00e7\u00e3o (E)\n\nv | \u2228 podem ser utilizados como disjun\u00e7\u00e3o (OU)\n\n> \u2192 \u2283 podem ser utilizados como implica\u00e7\u00e3o\n\n= \u2194 \u2261 podem ser utilizados como bicondicional\n\n~ - \u00ac podem ser utilizados como nega\u00e7\u00e3o\n\nComent\u00e1rios\n===========\n\nComent\u00e1rios de uma linha podem ser criados usando o caractere # (tudo ap\u00f3s um # \u00e9 ignorado).\n\nOrdem de Preced\u00eancia\n====================\n\nAs conjun\u00e7\u00f5es e disjun\u00e7\u00f5es s\u00e3o avaliadas na mesma ordem em que s\u00e3o escritas, da esquerda para a direita. Portanto, as duas express\u00f5es abaixo s\u00e3o consideradas equivalentes:\n\na \u2228 b \u2227 c \u2228 d\n\n((a \u2228 b) \u2227 c) \u2228 d)\n\nImplica\u00e7\u00f5es e bicondicionais t\u00eam preced\u00eancia sobre conjun\u00e7\u00f5es e disjun\u00e7\u00f5es. Da mesma forma, as duas express\u00f5es abaixo s\u00e3o equivalentes:\n\na \u2228 b \u2192 c \u2228 d\n\n(a \u2228 b) \u2192 (c \u2228 d)\n\nImplica\u00e7\u00f5es em cascata tamb\u00e9m s\u00e3o avaliadas da esquerda para a direita, tornando ambas as express\u00f5es abaixo equivalentes:\n\na \u2192 b \u2192 c\n\na \u2192 (b \u2192 c)");
Strings.translateChildren(document.body)}static translate(a){const b=Strings[a];return void 0!==b?b:a}static translateChildren(a){a=a.childNodes;for(let d=a.length-1;0<=d;d--){const e=a[d];if(!e.tagName)continue;e.childNodes&&e.childNodes.length&&Strings.translateChildren(e);let f;(f=e.getAttribute("title"))&&e.setAttribute("title",Strings.translate(f));if(f=e.getAttribute("data-string")){e.removeAttribute("data-string");var b=0;do{let g=f.indexOf(";",b);g<b&&(g=f.length);var c=f.indexOf("|",b);0>
c||c>=g?e.appendChild(document.createTextNode(Strings.translate(f))):(b=f.substring(b,c),c=f.substring(c+1,g),"text"==b?e.appendChild(document.createTextNode(Strings.translate(c))):e.setAttribute(b,Strings.translate(c)));b=g+1}while(b<f.length)}}}}Strings.language="en";Strings.DecimalSeparator=".";Strings.OppositeDecimalSeparator=",";Strings.Oops="Oops\u2026";Strings.AntecedentEvaluation="Antecedent Evaluation";Strings.AntecedentEvaluation1="Antecedent of ";Strings.AntecedentEvaluation2=" evaluates as True because of";
Strings.BiconditionalElimination="Biconditional Elimination";Strings.ConsequentEvaluation="Consequent Evaluation";Strings.ConsequentEvaluation1="Consequent of ";Strings.ConsequentEvaluation2=" evaluates as False because of";Strings.ConstructiveDilemma="Constructive Dilemma";Strings.DestructiveDilemma="Destructive Dilemma";Strings.DisjunctionElimination="Disjunction Elimination";Strings.DisjunctiveSyllogism="Disjunctive Syllogism";Strings.HypotheticalSyllogism="Hypothetical Syllogism";
Strings.ModusPonens="Modus Ponens";Strings.ModusTollens="Modus Tollens";Strings.NegationIntroduction="Negation Introduction";Strings.Simplification="Simplification";Strings.PleaseWait="Please wait\u2026";Strings.Error="Error";Strings.ICouldNotDeductAnythingElse="I could not deduct anything else \ud83d\ude0a";Strings.False="False";Strings.True="True";Strings.Ln="Ln";Strings.Col="Col";Strings.Menu="Menu";Strings.New="New";Strings.Load="Load";Strings.LoadEllipsis="Load\u2026";Strings.Save="Save";
Strings.SaveEllipsis="Save\u2026";Strings.ShowExplanation="Show Explanation\u2026";Strings.InstallEllipsis="Install\u2026";Strings.WrapMode="Line Wrap";Strings.Edit="Edit";Strings.Delete="Delete";Strings.Enable="Enable";Strings.Disable="Disable";Strings.Enabled="Enabled";Strings.Disabled="Disabled";Strings.Explanation="Explanation";Strings.OK="OK";Strings.Cancel="Cancel";Strings.Clear="Clear";Strings.Back="Back";Strings.Close="Close";Strings.Refresh="Refresh";Strings.Exit="Exit";
Strings.ShowNextDeduction="Show Next Deduction";Strings.StopDeducting="Stop Deducting";Strings.FileName="File Name";Strings.UnknownError="Unknown error";Strings.Theme="Theme";Strings.ThemeEllipsis="Theme\u2026";Strings.BrowserNotSupported="Unfortunately, your browser does not support this feature \ud83d\ude22";Strings.UpdateAvailable="Update Available!";Strings.PleaseRefresh="Please, refresh the page to update the app \ud83d\ude0a";Strings.ConfirmQuit="Do you really want to quit? You will lose unsaved information.";
Strings.ConfirmClose="Do you really want to continue? You will lose unsaved information.";Strings.ErrorNoFile="Your browser does not support advanced file access \ud83d\ude22";Strings.ErrorFileLoad="An error occurred while reading the file \ud83d\ude22";Strings.ErrorFileSave="An error occurred while saving the file \ud83d\ude22";Strings.ErrorDownload="An error occurred while downloading data \ud83d\ude22";Strings.ErrorInvalidFileName="Invalid file name \ud83d\ude22";Strings.ErrorInvalidChar="Invalid character: ";
Strings.ErrorUnexpectedEndOfCode="Unexpected end of code.";Strings.ErrorUnexpectedEndOfCodeUnaryExpected="Unexpected end of code. Variable, negation or ( expected.";Strings.ErrorUnexpectedEndOfLineUnaryExpected="Unexpected end of line. Variable, negation or ( expected.";Strings.ErrorEndOfLineExpected="End of line expected.";Strings.ErrorUnexpectedOperatorUnaryExpected="Unexpected operator. Variable, negation or ( expected.";Strings.ErrorUnaryExpected="Invalid character found. Variable, negation or ( expected.";
Strings.ErrorClosingParenthesisExpected=") expected.";Strings.ErrorClosingParenthesis2Expected="] expected.";Strings.ErrorClosingParenthesis3Expected="} expected.";Strings.ErrorClosingParenthesisOrOperatorExpected="), conjunction, disjunction, implication or biconditional operator expected.";Strings.ErrorClosingParenthesis2OrOperatorExpected="], conjunction, disjunction, implication or biconditional operator expected.";Strings.ErrorClosingParenthesis3OrOperatorExpected="}, conjunction, disjunction, implication or biconditional operator expected.";
Strings.ErrorConditionalOperatorExpected="Implication or biconditional operator expected.";Strings.ErrorOperatorExpected="Conjunction, disjunction, implication or biconditional operator expected.";Strings.ErrorVariableAlreadyAssignedToADifferentValue="Variable already assigned to a different value: ";Strings.ErrorExpressionAlreadyAssignedToADifferentValue="Expression already assigned to a different value: ";Strings.ErrorExpressionUsesTooManyVariables="Expression uses more than 16 variables.";
Strings.ErrorInconsistentAxioms="Inconsistent axioms: ";Strings.ErrorInconsistentExpression="Inconsistent expression: ";Strings.ErrorInconsistentExpression2=" evaluated as ";Strings.ErrorInconsistentExpression3because=" because of ";Strings.ErrorInconsistentExpression3=" but now evaluates as ";Strings.ErrorTooManyVariables="More than 256 declared variables.";Strings.ErrorUnknownVariable="Unknown variable: ";Strings.ExplanationBody="Operators\n=========\n\n^ & . \u2227 \u22c5 can be used as conjunction (AND)\n\nv | \u2228 can be used as disjunction (OR)\n\n> \u2192 \u2283 can be used as implication\n\n= \u2194 \u2261 can be used as biconditional\n\n~ - \u00ac can be used as negation\n\nComments\n========\n\nSingle-line comments can be created using the character # (everything after a # is ignored).\n\nOrder of Precedence\n===================\n\nConjunctions and disjunctions are evaluated in the same order they are written, from left to right. Therefore, both expressions below are considered equivalent:\n\na \u2228 b \u2227 c \u2228 d\n\n((a \u2228 b) \u2227 c) \u2228 d)\n\nImplications and biconditionals take precedence over conjunctions and disjunctions. Likewise, both expressions below are equivalent:\n\na \u2228 b \u2192 c \u2228 d\n\n(a \u2228 b) \u2192 (c \u2228 d)\n\nCascading implications are also evaluated from left to right, making both expressions below equivalent:\n\na \u2192 b \u2192 c\n\na \u2192 (b \u2192 c)";
class ModelObject{}
class Evaluatable extends ModelObject{constructor(a){super();this.id=Evaluatable.nextId++;this.isUnary=a;this._evaluatedValue=this._equivalence=this._sortedVariables=this._usedVariables=null;this.equivalenceLastByteMask=this.equivalenceVariableCount=0;this.computedString=this.computedSimplifiedString=null}get simplifiedString(){this.computedSimplifiedString||(this.computedSimplifiedString=this.computeString(!0));return this.computedSimplifiedString}toString(a){if(a)return this.simplifiedString;this.computedString||
(this.computedString=this.computeString(!1));return this.computedString}get usedVariables(){this._usedVariables||(this._usedVariables=new VariableMap,this.collectVariables(this._usedVariables));return this._usedVariables}get sortedVariables(){if(!this._sortedVariables){const a=this.usedVariables,b=[];for(let c of a.keys())b.push(c);b.sort((c,d)=>c-d);this._sortedVariables=b.join("_")}return this._sortedVariables}get equivalence(){if(!this._equivalence){var a=this.usedVariables;const c=[];for(var b of a.values())c.push(b);
c.sort((e,f)=>e.id-f.id);a=c.length;if(16<a)throw Error(Strings.ErrorExpressionUsesTooManyVariables);b=1<<a;const d=new Uint8Array(a+(b+7>>>3));this.equivalenceVariableCount=a;this.equivalenceLastByteMask=(1<<(b&7||8))-1;for(let e=0;e<a;e++)d[e]=c[e].id;for(let e=0,f=a<<3;e<b;e++,f++){for(let g=a-1,h=e;0<=g;g--,h>>>=1)c[g].helperValue=!!(h&1);this.evaluateEquivalence()&&(d[f>>>3]|=1<<(f&7))}this._equivalence=d}return this._equivalence}isEquivalent(a){const b=this.equivalence,c=(a=a.actualEvaluatable).equivalence;
if(this.equivalenceVariableCount!==a.equivalenceVariableCount)return!1;a=b.length;for(let d=0;d<a;d++)if(b[d]!==c[d])return!1;return!0}isEquivalentNegated(a){const b=this.equivalence,c=(a=a.actualEvaluatable).equivalence;var d=this.equivalenceVariableCount;if(d!==a.equivalenceVariableCount)return!1;for(a=0;a<d;a++)if(b[a]!==c[a])return!1;for(d=b.length-1;a<d;a++)if(b[a]!==~c[a])return!1;return b[a]===(~c[a]&this.equivalenceLastByteMask)}isEquivalentSomehow(a){const b=this.equivalence,c=(a=a.actualEvaluatable).equivalence;
var d=this.equivalenceVariableCount;if(d!==a.equivalenceVariableCount)return 0;for(a=0;a<d;a++)if(b[a]!==c[a])return 0;d=b.length-1;if(a===d)return b[a]===c[a]?1:b[a]===(~c[a]&this.equivalenceLastByteMask)?-1:0;if(b[a]===c[a]){for(a++;a<=d;a++)if(b[a]!==c[a])return 0;return 1}if(b[a]===~c[a]){for(a++;a<d;a++)if(b[a]!==~c[a])return 0;return b[a]===(~c[a]&this.equivalenceLastByteMask)?-1:0}return 0}evaluateValue(){const a=this.evaluateValueInternal();if(null!==a)if(null===this._evaluatedValue)this._evaluatedValue=
a;else if(a!==this._evaluatedValue)throw Error(Strings.ErrorInconsistentExpression+this.toString()+Strings.ErrorInconsistentExpression2+(this._evaluatedValue?Strings.True:Strings.False)+Strings.ErrorInconsistentExpression3+(a?Strings.True:Strings.False));return a}get actualEvaluatable(){return this}}Evaluatable.nextId=1;
class SubExpression extends Evaluatable{constructor(a,b,c){super(!0);this.evaluatable=a.actualEvaluatable;this.openingParenthesis=b||TokenStrings.OpeningParenthesis;this.closingParenthesis=c||TokenStrings.ClosingParenthesis}equals(a){return a instanceof Evaluatable&&this.evaluatable.equals(a)}computeString(a){return this.openingParenthesis+this.evaluatable.toString(a)+this.closingParenthesis}checkIfAxiomIsOfInterest(a){this.evaluatable.checkIfAxiomIsOfInterest(a)}collectVariables(a){this.evaluatable.collectVariables(a)}evaluateEquivalence(){return this.evaluatable.evaluateEquivalence()}evaluateValueInternal(){return this.evaluatable.evaluateValue()}causesForEvaluation(){return this.evaluatable.causesForEvaluation()}get usedVariables(){return this.evaluatable.usedVariables}get sortedVariables(){return this.evaluatable.sortedVariables}get equivalence(){return this.evaluatable.equivalence}isEquivalent(a){return this.evaluatable.isEquivalent(a)}isEquivalentNegated(a){return this.evaluatable.isEquivalentNegated(a)}isEquivalentSomehow(a){return this.evaluatable.isEquivalentSomehow(a)}evaluateValue(){return this.evaluatable.evaluateValue()}get actualEvaluatable(){return this.evaluatable}}
class Variable extends Evaluatable{constructor(a,b){super(!0);this.id=a;this.name=b;this.helperValue=!1;this.cause=this.assignedValue=null}equals(a){return this===a}get simplifiedString(){return this.name}toString(a){return this.name}computeString(a){return this.name}checkIfAxiomIsOfInterest(a){switch(a.evaluatable.isEquivalentSomehow(this)){case 1:if(null===this.assignedValue)this.assignedValue=!0,this.cause=a;else if(!this.assignedValue)throw Error(Strings.ErrorVariableAlreadyAssignedToADifferentValue+
Strings.False);break;case -1:if(null===this.assignedValue)this.assignedValue=!1,this.cause=a;else if(this.assignedValue)throw Error(Strings.ErrorVariableAlreadyAssignedToADifferentValue+Strings.True);}}collectVariables(a){a.set(this.id,this)}evaluateEquivalence(){return this.helperValue}evaluateValueInternal(){return this.assignedValue}causesForEvaluation(){return this.cause?[this.cause]:null}}
class IdSet extends Set{intersects(a){if(a.size<=this.size)for(let b of a.keys()){if(this.has(b))return!0}else for(let b of this.keys())if(a.has(b))return!0;return!1}containsSameElements(a){if(this.size!==a.size)return!1;for(let b of a.keys())if(!this.has(b))return!1;return!0}containsSubset(a){if(this.size<a.size)return!1;for(let b of a.keys())if(!this.has(b))return!1;return!0}deleteSubset(a){for(let b of a.keys())this.delete(b)}addSubset(a){for(let b of a.keys())this.add(b)}clone(){return new IdSet(this)}}
class VariableMap extends Map{intersects(a){if(a.size<=this.size)for(let b of a.keys()){if(this.has(b))return!0}else for(let b of this.keys())if(a.has(b))return!0;return!1}containsSameElements(a){if(this.size!==a.size)return!1;for(let b of a.keys())if(!this.has(b))return!1;return!0}containsSubset(a){if(this.size<a.size)return!1;for(let b of a.keys())if(!this.has(b))return!1;return!0}deleteSubset(a){for(let b of a.keys())this.delete(b)}clone(){return new VariableMap(this)}createIdSet(){return new IdSet(this.keys())}}
function createVariableNameMap(){return new Map}function createAxiomMap(){return new Map}function createAxiomOfInterestMap(){return new Map}function createBooleanMap(){return new Map}function createRuleMap(){return new Map}
class VariableCollection{constructor(){this.variables=createVariableNameMap();this.nextVariableId=0}getOrCreateVariable(a){let b=this.variables.get(a);if(b)return b;if(256<=this.nextVariableId)throw Error(Strings.ErrorTooManyVariables);b=new Variable(this.nextVariableId++,a);this.variables.set(a,b);return b}getVariable(a){return this.variables.get(a)||null}}
class Axiom extends ModelObject{constructor(a,b){super();this.id=a;this.evaluatable=b.actualEvaluatable}get simplifiedString(){return this.evaluatable.simplifiedString}toString(a){return this.evaluatable.toString(a)}equals(a){return a instanceof Axiom&&a.evaluatable.equals(this.evaluatable)}initialize(a,b){let c=!0;for(var d=0;d<a;d++)switch(this.evaluatable.isEquivalentSomehow(b[d].evaluatable)){case 1:c=!1;break;case -1:throw Error(Strings.ErrorInconsistentAxioms+this.id+" / "+b[d].id);}if(c&&this.evaluatable instanceof
Connective){d=0;const e=this.evaluatable.operands;for(let f=e.length-1;0<=f;f--){const g=e[f];let h=!1;for(let k=a-1;0<=k;k--)if(g.isEquivalent(b[k].evaluatable)){h=!0;break}if(!h)break;d++}d===e.length&&(c=!1)}return c}checkIfAxiomIsOfInterest(a){this.evaluatable.checkIfAxiomIsOfInterest(a);a.evaluatable.checkIfAxiomIsOfInterest(this)}}
class Rule{constructor(a,b){if(3<b)throw Error("Invalid input count: "+b);this.id=Rule.nextIds[b-1]++;this.name=a;this.inputCount=b}static init(){Rule.biconditionalElimination=new BiconditionalElimination;Rule.rules.push(new Simplification);Rule.rules.push(new AntecedentEvaluation);Rule.rules.push(new ConsequentEvaluation);Rule.rules2.push(new DisjunctiveSyllogism);Rule.rules2.push(new HypotheticalSyllogism);Rule.rules2.push(new ModusPonens);Rule.rules2.push(new ModusTollens);Rule.rules2.push(new NegationIntroduction);
Rule.rules3.push(new ConstructiveDilemmaDisjunctionElimination);Rule.rules3.push(new DestructiveDilemma)}static applyRules1(a,b,c,d){c=d[c];d=Rule.rules;for(let e=d.length-1;0<=e;e--){const f=d[e].apply(c);f&&(!0===f?a.push({rule:d[e],axioms:[c]}):b.push.apply(b,f))}}static applyRules2(a,b,c,d){const e=d[c],f=Rule.rules2;for(let g=0;g<c;g++){const h=d[g];for(let k=f.length-1;0<=k;k--){const l=f[k].apply(h,e);l&&(!0===l?a.push({rule:f[k],axioms:[h,e]}):b.push.apply(b,l))}}}static applyRules3(a,b,c,
d){const e=d[c],f=Rule.rules3;for(let g=0;g<c;g++){const h=d[g];for(let k=g+1;k<c;k++){const l=d[k];for(let m=f.length-1;0<=m;m--){const n=f[m].apply(h,l,e);n&&(!0===n?a.push({rule:f[m],axioms:[h,l,e]}):b.push.apply(b,n))}}}}static applyRulesOfPendingDeductions(a,b){let c=a.length;for(let e=0;e<c;e++){var d=a[e];const f=d.rule;d=f.apply.apply(f,d.axioms);!0!==d&&(a.splice(e,1),c--,e--,d&&b.push.apply(b,d))}}toString(){return this.name}createFullExplanation(a,...b){a=a+": "+b[0].id;for(let c=1;c<b.length;c++)a+=
", "+b[c].id;return a}createExplanation(...a){return this.createFullExplanation(this.name,...a)}}Rule.rules=[];Rule.rules2=[];Rule.rules3=[];Rule.nextIds=[0,0,0];
class AntecedentEvaluation extends Rule{constructor(){super(Strings.AntecedentEvaluation,1)}apply(a){const b=a.evaluatable;if(b instanceof Implication){var c=b.operandA.evaluateValue();if(null===c)return!0;if(!1===c)return!1;(c=b.operandA.causesForEvaluation())&&c.length||(c=[a]);return[{newEvaluatable:b.operandA,explanation:this.createFullExplanation(Strings.AntecedentEvaluation1+a.id+Strings.AntecedentEvaluation2,...c)}]}return!1}}
class BiconditionalElimination extends Rule{constructor(){super(Strings.BiconditionalElimination,1)}apply(a){const b=a.evaluatable;if(!(b instanceof Biconditional))return!1;a=this.createExplanation(a);return[{newEvaluatable:new Implication(b.operandA,b.operandB),explanation:a},{newEvaluatable:new Implication(b.operandB,b.operandA),explanation:a}]}}
class ConsequentEvaluation extends Rule{constructor(){super(Strings.ConsequentEvaluation,1)}apply(a){const b=a.evaluatable;if(b instanceof Implication){var c=b.operandB.evaluateValue();if(null===c)return!0;if(!0===c)return!1;(c=b.operandA.causesForEvaluation())&&c.length||(c=[a]);return[{newEvaluatable:new Negation(b.operandB),explanation:this.createFullExplanation(Strings.ConsequentEvaluation1+a.id+Strings.ConsequentEvaluation2,...c)}]}return!1}}
class ConstructiveDilemmaDisjunctionElimination extends Rule{constructor(){super(Strings.ConstructiveDilemma,3)}applyIfPossible(a,b,c){const d=a.evaluatable,e=b.evaluatable,f=c.evaluatable;return d instanceof Implication&&e instanceof Implication&&!d.operandA.isEquivalent(e.operandA)&&f.isEquivalent(Disjunction.create([d.operandA,e.operandA]))?[{newEvaluatable:Disjunction.create([d.operandB,e.operandB]),explanation:this.createFullExplanation(Strings.ConstructiveDilemma,a,b,c)}]:!1}apply(a,b,c){return this.applyIfPossible(a,
b,c)||this.applyIfPossible(a,c,b)||this.applyIfPossible(b,c,a)}}
class DestructiveDilemma extends Rule{constructor(){super(Strings.DestructiveDilemma,3)}applyIfPossible(a,b,c){const d=a.evaluatable,e=b.evaluatable,f=c.evaluatable;return d instanceof Implication&&e instanceof Implication&&!d.operandB.isEquivalent(e.operandB)&&f.isEquivalent(Disjunction.create([new Negation(d.operandB),new Negation(e.operandB)]))?[{newEvaluatable:Disjunction.create([new Negation(d.operandA),new Negation(e.operandA)]),explanation:this.createExplanation(a,b,c)}]:!1}apply(a,b,c){return this.applyIfPossible(a,
b,c)||this.applyIfPossible(a,c,b)||this.applyIfPossible(b,c,a)}}
class DisjunctiveSyllogism extends Rule{constructor(){super(Strings.DisjunctiveSyllogism,2)}applyIfPossible(a,b){var c=a.evaluatable,d;if(c instanceof Disjunction&&(d=c.getAxiomOfInterest(b))){if(-1<d.equivalence)return!1;c=c.operands.slice();d=d.operands;for(let e=c.length-1;0<=e;e--){const f=c[e];for(let g=d.length-1;0<=g;g--)if(f===d[g]){c.splice(e,1);break}}return[{newEvaluatable:1===c.length?c[0]:Disjunction.create(c),explanation:this.createExplanation(a,b)}]}return!1}apply(a,b){return this.applyIfPossible(a,
b)||this.applyIfPossible(b,a)}}class HypotheticalSyllogism extends Rule{constructor(){super(Strings.HypotheticalSyllogism,2)}applyIfPossible(a,b){const c=a.evaluatable,d=b.evaluatable;return c instanceof Implication&&d instanceof Implication&&c.operandB.isEquivalent(d.operandA)?[{newEvaluatable:new Implication(c.operandA,d.operandB),explanation:this.createExplanation(a,b)}]:!1}apply(a,b){return this.applyIfPossible(a,b)||this.applyIfPossible(b,a)}}
class ModusPonens extends Rule{constructor(){super(Strings.ModusPonens,2)}applyIfPossible(a,b){const c=a.evaluatable,d=b.evaluatable;return c instanceof Implication&&c.operandA.isEquivalent(d)?[{newEvaluatable:c.operandB,explanation:this.createExplanation(a,b)}]:!1}apply(a,b){return this.applyIfPossible(a,b)||this.applyIfPossible(b,a)}}
class ModusTollens extends Rule{constructor(){super(Strings.ModusTollens,2)}applyIfPossible(a,b){const c=a.evaluatable,d=b.evaluatable;return c instanceof Implication&&c.operandB.isEquivalentNegated(d)?[{newEvaluatable:new Negation(c.operandA),explanation:this.createExplanation(a,b)}]:!1}apply(a,b){return this.applyIfPossible(a,b)||this.applyIfPossible(b,a)}}
class NegationIntroduction extends Rule{constructor(){super(Strings.NegationIntroduction,2)}apply(a,b){const c=a.evaluatable,d=b.evaluatable;return c instanceof Implication&&d instanceof Implication&&c.operandA.isEquivalent(d.operandA)&&c.operandB.isEquivalentNegated(d.operandB)?[{newEvaluatable:new Negation(c.operandA),explanation:this.createExplanation(a,b)}]:!1}}
class Simplification extends Rule{constructor(){super(Strings.Simplification,1)}apply(a){var b=a.evaluatable;if(!(b instanceof Conjunction))return!1;b=b.operands;const c=Array(b.length);a=this.createExplanation(a);for(let d=b.length-1;0<=d;d--)c[d]={newEvaluatable:b[d],explanation:a};return c}}
class AxiomContext{constructor(a,b,c,d){this.code=a;this.variables=b;this.axioms=c;this.nextAxiomId=d;this.deductions=null;this.pendingDeductions=[];this.stringDeductions=[];this.error=!1}getVariable(a){return this.variables.getVariable(a)}step(){const a=this.pendingDeductions,b=this.stringDeductions;if(!this.error)try{const h=this.axioms;if(!this.deductions){var c=this.deductions=[];let k=h.length;for(var d=0;d<k;d++){var e=Rule.biconditionalElimination.apply(h[d]);e&&!0!==e&&(h.splice(d,1),k--,
d--,c.push.apply(c,e))}k=h.length;for(d=0;d<k;d++)h[d].initialize(d,h);for(d=0;d<k;d++){var f=h[d];for(e=d+1;e<k;e++)h[e].checkIfAxiomIsOfInterest(f)}for(f=0;f<k;f++)Rule.applyRules1(a,c,f,h),Rule.applyRules2(a,c,f,h)}if(!b.length){const k=this.deductions;if(!k.length){var g=h.length;for(c=0;c<g;c++)Rule.applyRules3(a,k,c,h)}for(;!b.length&&k.length;){const l=k.splice(0,1)[0];if(l.error){this.error=!0;b.push({error:!0,text:l.explanation,explanation:null});break}const m=h.length,n=new Axiom(this.nextAxiomId,
l.newEvaluatable);try{if(!n.initialize(m,h))continue}catch(p){throw b.push({error:!1,text:l.newEvaluatable.actualEvaluatable.toString(),explanation:l.explanation}),p;}h.push(n);this.nextAxiomId+=2;b.push({error:!1,text:l.newEvaluatable.actualEvaluatable.toString(),explanation:l.explanation});try{for(g=0;g<m;g++)n.checkIfAxiomIsOfInterest(h[g]);Rule.applyRulesOfPendingDeductions(a,k);Rule.applyRules1(a,k,m,h);Rule.applyRules2(a,k,m,h)}catch(p){k.push({error:!0,newEvaluatable:null,explanation:"formatMessage"in
p?p.formatMessage():p.message||p.toString()});break}}}}catch(h){this.error=!0,b.push({error:!0,text:"formatMessage"in h?h.formatMessage():h.message||h.toString(),explanation:null})}return b.length?b.splice(0,1)[0]:null}}class InterpreterError extends Error{constructor(a,b,c,d){super(a);this.index=b;this.line=c;this.lineIndex=d}formatMessage(){return Strings.Ln+" "+this.line+", "+Strings.Col+" "+this.lineIndex+" - "+this.message}}class TokenStrings{}TokenStrings.OpeningParenthesis="(";
TokenStrings.OpeningParenthesis2="[";TokenStrings.OpeningParenthesis3="{";TokenStrings.ClosingParenthesis=")";TokenStrings.ClosingParenthesis2="]";TokenStrings.ClosingParenthesis3="}";TokenStrings.Negation="\u00ac";TokenStrings.Conjunction="\u2227";TokenStrings.ConjunctionSpace=" \u2227 ";TokenStrings.Disjunction="\u2228";TokenStrings.DisjunctionSpace=" \u2228 ";TokenStrings.Implication="\u2192";TokenStrings.ImplicationSpace=" \u2192 ";TokenStrings.Biconditional="\u2194";
TokenStrings.BiconditionalSpace=" \u2194 ";TokenStrings.EndOfLine="\n";var TokenType;
(function(a){a[a.Variable=0]="Variable";a[a.OpeningParenthesis=1]="OpeningParenthesis";a[a.OpeningParenthesis2=2]="OpeningParenthesis2";a[a.OpeningParenthesis3=3]="OpeningParenthesis3";a[a.ClosingParenthesis=4]="ClosingParenthesis";a[a.ClosingParenthesis2=5]="ClosingParenthesis2";a[a.ClosingParenthesis3=6]="ClosingParenthesis3";a[a.Negation=7]="Negation";a[a.Conjunction=8]="Conjunction";a[a.Disjunction=9]="Disjunction";a[a.Implication=10]="Implication";a[a.Biconditional=11]="Biconditional";a[a.EndOfLine=
12]="EndOfLine"})(TokenType||(TokenType={}));
class Token extends ModelObject{constructor(a,b,c,d,e){super();this.type=a;this.text=b;this.index=c;this.line=d;this.lineIndex=e}get isOperator(){switch(this.type){case TokenType.Conjunction:case TokenType.Disjunction:case TokenType.Implication:case TokenType.Biconditional:return!0}return!1}get isExpressionOperator(){switch(this.type){case TokenType.Conjunction:case TokenType.Disjunction:return!0}return!1}get isConditionalOperator(){switch(this.type){case TokenType.Implication:case TokenType.Biconditional:return!0}return!1}get simplifiedString(){return this.text}toString(a){return this.text}equals(a){return a&&a instanceof
Token&&a.type===this.type?a.type===TokenType.Variable?a.text===this.text:!0:!1}}
class TokenStream{constructor(a){this.code=a;this.index=0;this.lineIndex=this.line=1;this.token=this.fetchNextToken()}get currentIndex(){return this.index}get currentLine(){return this.line}get currentLineIndex(){return this.lineIndex}peekToken(){return this.token}getToken(){const a=this.token;this.token=this.fetchNextToken();return a}fetchNextToken(){var a=this.code;if(this.index>=a.length)return null;for(;this.index<a.length;){const b=this.index;let c=a.charCodeAt(b);switch(c){case 32:case 9:case 11:case 12:case 160:this.index++;
this.lineIndex++;break;case 10:return this.index++,b+1<a.length&&13===a.charCodeAt(b+1)&&this.index++,a=new Token(TokenType.EndOfLine,TokenStrings.EndOfLine,b,this.line,this.lineIndex),this.line++,this.lineIndex=1,a;case 13:return this.index++,b+1<a.length&&10===a.charCodeAt(b+1)&&this.index++,a=new Token(TokenType.EndOfLine,TokenStrings.EndOfLine,b,this.line,this.lineIndex),this.line++,this.lineIndex=1,a;case 133:case 8232:case 8233:return a=new Token(TokenType.EndOfLine,TokenStrings.EndOfLine,b,
this.line,this.lineIndex),this.index++,this.line++,this.lineIndex=1,a;case 40:return a=new Token(TokenType.OpeningParenthesis,TokenStrings.OpeningParenthesis,b,this.line,this.lineIndex),this.index++,this.lineIndex++,a;case 91:return a=new Token(TokenType.OpeningParenthesis2,TokenStrings.OpeningParenthesis2,b,this.line,this.lineIndex),this.index++,this.lineIndex++,a;case 123:return a=new Token(TokenType.OpeningParenthesis3,TokenStrings.OpeningParenthesis3,b,this.line,this.lineIndex),this.index++,this.lineIndex++,
a;case 41:return a=new Token(TokenType.ClosingParenthesis,TokenStrings.ClosingParenthesis,b,this.line,this.lineIndex),this.index++,this.lineIndex++,a;case 93:return a=new Token(TokenType.ClosingParenthesis2,TokenStrings.ClosingParenthesis2,b,this.line,this.lineIndex),this.index++,this.lineIndex++,a;case 125:return a=new Token(TokenType.ClosingParenthesis3,TokenStrings.ClosingParenthesis3,b,this.line,this.lineIndex),this.index++,this.lineIndex++,a;case 126:case 45:case 172:return a=new Token(TokenType.Negation,
TokenStrings.Negation,b,this.line,this.lineIndex),this.index++,this.lineIndex++,a;case 94:case 38:case 46:case 8743:case 8901:return a=new Token(TokenType.Conjunction,TokenStrings.Conjunction,b,this.line,this.lineIndex),this.index++,this.lineIndex++,a;case 118:case 124:case 8744:return a=new Token(TokenType.Disjunction,TokenStrings.Disjunction,b,this.line,this.lineIndex),this.index++,this.lineIndex++,a;case 62:case 8594:case 8835:case 10230:return a=new Token(TokenType.Implication,TokenStrings.Implication,
b,this.line,this.lineIndex),this.index++,this.lineIndex++,a;case 61:case 8596:case 8801:return a=new Token(TokenType.Biconditional,TokenStrings.Biconditional,b,this.line,this.lineIndex),this.index++,this.lineIndex++,a;case 35:this.index++;for(this.lineIndex++;this.index<a.length;){c=a.charCodeAt(this.index);if(10===c||13===c)break;this.index++;this.lineIndex++}break;default:const d=this.lineIndex;let e=0;for(;this.index<a.length;){c=a.charCodeAt(this.index);if(95!==c&&(118===c||48>c||57<c&&65>c||
90<c&&97>c||122<c)){if(!e)throw new InterpreterError(Strings.ErrorInvalidChar+String.fromCharCode(c),b,this.line,d);return new Token(TokenType.Variable,a.substr(b,e),b,this.line,d)}e++;this.index++;this.lineIndex++}if(e)return new Token(TokenType.Variable,a.substr(b,e),b,this.line,d)}}return null}}
class Parser{static parse(a){Evaluatable.nextId=1;const b=new TokenStream(a);const c=new VariableCollection,d=[];for(;;){var e=b.peekToken();if(!e)break;if(e.type===TokenType.EndOfLine)b.getToken();else{e=Parser.parseAxiom(e.line,b,c);if(!e)break;d.push(e)}}return new AxiomContext(a,c,d,b.currentLine+3)}static parseUnary(a,b,c){const d=a.getToken();if(!d)throw new InterpreterError(Strings.ErrorUnexpectedEndOfCodeUnaryExpected,a.currentIndex,a.currentLine,a.currentLineIndex);switch(d.type){case TokenType.Variable:a=
null;b?a=b.getOrCreateVariable(d.text):c&&(a=c.getVariable(d.text));if(!a)throw new InterpreterError(Strings.ErrorUnknownVariable+d.text,d.index,d.line,d.lineIndex);return a;case TokenType.OpeningParenthesis:b=Parser.parseConditional(a,b,c);c=a.getToken();if(!c)throw new InterpreterError(Strings.ErrorClosingParenthesisOrOperatorExpected,a.currentIndex,a.currentLine,a.currentLineIndex);if(c.type!==TokenType.ClosingParenthesis)throw new InterpreterError(Strings.ErrorClosingParenthesisOrOperatorExpected,
c.index,c.line,c.lineIndex);return b.isUnary?b:new SubExpression(b);case TokenType.OpeningParenthesis2:b=Parser.parseConditional(a,b,c);c=a.getToken();if(!c)throw new InterpreterError(Strings.ErrorClosingParenthesis2OrOperatorExpected,a.currentIndex,a.currentLine,a.currentLineIndex);if(c.type!==TokenType.ClosingParenthesis2)throw new InterpreterError(Strings.ErrorClosingParenthesis2OrOperatorExpected,c.index,c.line,c.lineIndex);return b.isUnary?b:new SubExpression(b,TokenStrings.OpeningParenthesis2,
TokenStrings.ClosingParenthesis2);case TokenType.OpeningParenthesis3:b=Parser.parseConditional(a,b,c);c=a.getToken();if(!c)throw new InterpreterError(Strings.ErrorClosingParenthesis3OrOperatorExpected,a.currentIndex,a.currentLine,a.currentLineIndex);if(c.type!==TokenType.ClosingParenthesis3)throw new InterpreterError(Strings.ErrorClosingParenthesis3OrOperatorExpected,c.index,c.line,c.lineIndex);return b.isUnary?b:new SubExpression(b,TokenStrings.OpeningParenthesis3,TokenStrings.ClosingParenthesis3);
case TokenType.Negation:return b=Parser.parseUnary(a,b,c),new Negation(b);case TokenType.EndOfLine:throw new InterpreterError(Strings.ErrorUnexpectedEndOfLineUnaryExpected,d.index,d.line,d.lineIndex);default:throw new InterpreterError(d.isOperator?Strings.ErrorUnexpectedOperatorUnaryExpected:Strings.ErrorUnaryExpected,d.index,d.line,d.lineIndex);}}static parseExpression(a,b,c){var d=Parser.parseUnary(a,b,c);let e=a.peekToken();if(!e||!e.isExpressionOperator)return d;let f=e.type;for(d=[d];e&&e.isExpressionOperator;)a.getToken(),
e.type!==f&&(d=[f===TokenType.Conjunction?Conjunction.create(d):Disjunction.create(d)],f=e.type),d.push(Parser.parseUnary(a,b,c)),e=a.peekToken();return f===TokenType.Conjunction?Conjunction.create(d):Disjunction.create(d)}static parseConjunction(a,b,c){var d=Parser.parseUnary(a,b,c);let e=a.peekToken();if(!e||e.type!==TokenType.Conjunction)return d;for(d=[d];e&&e.type===TokenType.Conjunction;)a.getToken(),d.push(Parser.parseUnary(a,b,c)),e=a.peekToken();return Conjunction.create(d)}static parseDisjunction(a,
b,c){var d=Parser.parseConjunction(a,b,c);let e=a.peekToken();if(!e||e.type!==TokenType.Disjunction)return d;for(d=[d];e&&e.type===TokenType.Disjunction;)a.getToken(),d.push(Parser.parseConjunction(a,b,c)),e=a.peekToken();return Disjunction.create(d)}static parseConditional(a,b,c){let d=Parser.parseDisjunction(a,b,c);const e=a.peekToken();e&&e.isConditionalOperator&&(a.getToken(),a=Parser.parseConditional(a,b,c),d=e.type===TokenType.Implication?new Implication(d,a):new Biconditional(d,a));return d}static parseAxiom(a,
b,c,d){c=Parser.parseConditional(b,c,d);if((b=b.peekToken())&&b.type!==TokenType.EndOfLine)throw new InterpreterError(Strings.ErrorEndOfLineExpected,b.index,b.line,b.lineIndex);return new Axiom(a,c)}}
class Connective extends Evaluatable{constructor(a,b,c,d){super(!1);this.originalOperands=a;this.connector=c;this.axiomsOfInterest=createAxiomOfInterestMap();c=!1;if(b)for(this.operands=a,b=a.length-2;0<=b;b--){if(0>a[b].isEquivalentSomehow(a[b+1])){c=!0;break}}else{b=[];for(var e=a.length-1;0<=e;e--){var f=a[e];if(f.actualEvaluatable instanceof d){f=f.actualEvaluatable.operands;for(let g=f.length-1;0<=g;g--){const h=f[g];b.push(h.isUnary?h:new SubExpression(h))}}else b.push(f.isUnary?f:new SubExpression(f))}for(a=
b.length-1;0<=a;a--)for(d=b[a].actualEvaluatable,e=a-1;0<=e;e--)if(d.equals(b[e])){b.splice(a,1);break}a=Array(b.length);for(d=a.length-1;0<=d;d--)a[d]={sortedVariables:b[d].actualEvaluatable.sortedVariables,operand:b[d]};a.sort((g,h)=>g.sortedVariables<h.sortedVariables?-1:1);for(b=a.length-2;0<=b;b--)if(a[b].sortedVariables===a[b+1].sortedVariables)switch(a[b].operand.isEquivalentSomehow(a[b+1].operand)){case 1:a.splice(b+1,1);break;case -1:c=!0}this.operands=Array(a.length);for(b=a.length-1;0<=
b;b--)this.operands[b]=a[b].operand}this.containsOppositeOperators=c}equals(a){if(!(a instanceof Evaluatable))return!1;var b=a.actualEvaluatable;if(!(b instanceof Connective)||this.connector!==b.connector||this.operands.length!==b.operands.length)return!1;a=this.operands;b=b.operands;for(let c=a.length-1;0<=c;c--)if(!a[c].equals(b[c]))return!1;return!0}computeString(a){const b=a?this.operands:this.originalOperands,c=this.connector,d=b.length;let e=b[0].toString(a);for(let f=1;f<d;f++)e+=c+b[f].toString(a);
return e}generateNextSequence(a,b,c){let d=0,e=c-1;for(;0<=e;){a[e]++;if(a[e]<=b-d)break;e--;d++}if(0>e)return!1;for(;++e<c;)a[e]=a[e-1]+1;return!0}checkIfAxiomIsOfInterest(a){if(!this.axiomsOfInterest.has(a.id)){var b=a.evaluatable,c=b.usedVariables,d=this.operands,e=d.length;for(var f=e-1;0<=f;f--)d[f].checkIfAxiomIsOfInterest(a);if(this.usedVariables.containsSubset(c)){for(f=e-1;0<=f;f--){var g=d[f].isEquivalentSomehow(b);if(g){this.axiomsOfInterest.set(a.id,{operands:[d[f]],equivalence:g,axiom:a});
return}}if(!(2>e)){d=d.slice();for(f=e-1;0<=f;f--)d[f].usedVariables.intersects(c)||d.splice(f,1);e=d.length;if(!(2>e)){f=e;--e;g=Array(f);var h=new IdSet;for(let m=2;m<=f;m++){for(var k=m-1;0<=k;k--)g[k]=k;do{h.clear();for(k=m-1;0<=k;k--)h.addSubset(d[g[k]].usedVariables);if(h.containsSameElements(c)){k=Array(m);for(var l=m-1;0<=l;l--)k[l]=d[g[l]];if(l=this.factoryMethod(k,!0).isEquivalentSomehow(b)){this.axiomsOfInterest.set(a.id,{operands:k,equivalence:l,axiom:a});return}}}while(this.generateNextSequence(g,
e,m))}}}}}}collectVariables(a){const b=this.operands;for(let c=b.length-1;0<=c;c--)b[c].collectVariables(a)}getAxiomOfInterest(a){return this.axiomsOfInterest.get(a.id)||null}}
class Biconditional extends Evaluatable{constructor(a,b){super(!1);this.operandA=a.isUnary?a:new SubExpression(a);this.operandB=b.isUnary?b:new SubExpression(b)}equals(a){if(!(a instanceof Evaluatable))return!1;a=a.actualEvaluatable;return a instanceof Biconditional&&this.operandA.equals(a.operandA)&&this.operandB.equals(a.operandB)}computeString(a){return this.operandA.toString(a)+TokenStrings.BiconditionalSpace+this.operandB.toString(a)}checkIfAxiomIsOfInterest(a){}collectVariables(a){}evaluateEquivalence(){return!1}evaluateValueInternal(){return null}causesForEvaluation(){return null}}
class Conjunction extends Connective{static create(a,b){a=new Conjunction(a,b);return 1===a.operands.length?a.operands[0]:a}constructor(a,b){super(a,b,TokenStrings.ConjunctionSpace,Conjunction)}get factoryMethod(){return Conjunction.create}evaluateEquivalence(){const a=this.operands;for(let b=0;b<a.length;b++)if(!a[b].evaluateEquivalence())return!1;return!0}evaluateValueInternal(){var a=this.operands;const b=this.usedVariables.createIdSet();let c=!0;for(let d=a.length-1;0<=d;d--){const e=a[d].evaluateValue();
null!==e&&(b.deleteSubset(a[d].usedVariables),e||(c=!1))}if(this.containsOppositeOperators)return!1;if(!c||!b.size)return c;a=this.axiomsOfInterest;for(let d of a.values()){b.deleteSubset(d.axiom.evaluatable.usedVariables);if(0>d.equivalence){c=!1;break}if(!b.size)break}return c?b.size?null:!0:!c}causesForEvaluation(){var a=this.operands;const b=this.usedVariables.createIdSet(),c=[];let d=!0;for(let e=a.length-1;0<=e;e--){const f=a[e].evaluateValue();if(null===f)continue;b.deleteSubset(a[e].usedVariables);
const g=a[e].causesForEvaluation();if(!f&&(d=!1,g))return g;g&&c.push.apply(c,g)}if((!d||!b.size)&&c.length)return c;if(this.containsOppositeOperators)return null;a=this.axiomsOfInterest;for(let e of a.values()){b.deleteSubset(e.axiom.evaluatable.usedVariables);if(0>e.equivalence)return[e.axiom];if(!b.size)break}return null}}
class Disjunction extends Connective{static create(a,b){a=new Disjunction(a,b);return 1===a.operands.length?a.operands[0]:a}constructor(a,b){super(a,b,TokenStrings.DisjunctionSpace,Disjunction)}get factoryMethod(){return Disjunction.create}evaluateEquivalence(){const a=this.operands;for(let b=0;b<a.length;b++)if(a[b].evaluateEquivalence())return!0;return!1}evaluateValueInternal(){var a=this.operands;const b=this.usedVariables.createIdSet();let c=!1;for(let d=a.length-1;0<=d;d--){const e=a[d].evaluateValue();
null!==e&&(b.deleteSubset(a[d].usedVariables),e&&(c=!0))}if(this.containsOppositeOperators)return!0;if(c||!b.size)return c;a=this.axiomsOfInterest;for(let d of a.values()){b.deleteSubset(d.axiom.evaluatable.usedVariables);if(0<d.equivalence){c=!0;break}if(!b.size)break}return c?c:b.size?null:!1}causesForEvaluation(){var a=this.operands;const b=this.usedVariables.createIdSet(),c=[];let d=!1;for(let e=a.length-1;0<=e;e--){const f=a[e].evaluateValue();if(null===f)continue;b.deleteSubset(a[e].usedVariables);
const g=a[e].causesForEvaluation();if(f&&(d=!0,g))return g;g&&c.push.apply(c,g)}if((d||!b.size)&&c.length)return c;if(this.containsOppositeOperators)return null;a=this.axiomsOfInterest;for(let e of a.values()){b.deleteSubset(e.axiom.evaluatable.usedVariables);if(0<e.equivalence)return[e.axiom];if(!b.size)break}return null}}
class Implication extends Evaluatable{constructor(a,b){super(!1);this.operandA=a.isUnary?a:new SubExpression(a);this.operandB=b.isUnary?b:new SubExpression(b);this.axiomOfInterest=null}equals(a){if(!(a instanceof Evaluatable))return!1;a=a.actualEvaluatable;return a instanceof Implication&&this.operandA.equals(a.operandA)&&this.operandB.equals(a.operandB)}computeString(a){return this.operandA.toString(a)+TokenStrings.ImplicationSpace+this.operandB.toString(a)}checkIfAxiomIsOfInterest(a){if(!this.axiomOfInterest){const b=
a.evaluatable.isEquivalentSomehow(this);b&&(this.axiomOfInterest={operands:null,equivalence:b,axiom:a})}this.operandA.checkIfAxiomIsOfInterest(a);this.operandB.checkIfAxiomIsOfInterest(a)}collectVariables(a){this.operandA.collectVariables(a);this.operandB.collectVariables(a)}evaluateEquivalence(){return!this.operandA.evaluateEquivalence()||this.operandB.evaluateEquivalence()}evaluateValueInternal(){const a=this.operandA.evaluateValue(),b=this.operandB.evaluateValue();let c=null;null===a?b&&(c=!0):
null===b?a||(c=!0):c=!a||b;if(null!==c){if(this.axiomOfInterest&&c!==0<this.axiomOfInterest.equivalence)throw Error(Strings.ErrorInconsistentExpression+this.toString()+Strings.ErrorInconsistentExpression2+(0<this.axiomOfInterest.equivalence?Strings.True:Strings.False)+Strings.ErrorInconsistentExpression3because+this.axiomOfInterest.axiom.id+Strings.ErrorInconsistentExpression3+(c?Strings.True:Strings.False));return c}return this.axiomOfInterest?0<this.axiomOfInterest.equivalence:null}causesForEvaluation(){var a=
this.operandA.evaluateValue(),b=this.operandB.evaluateValue();if(null===a){if(b)return this.operandB.causesForEvaluation()}else if(null===b){if(!a)return this.operandA.causesForEvaluation()}else{a=this.operandA.causesForEvaluation();b=this.operandB.causesForEvaluation();if(a&&b)return a.push.apply(a,b),a;if(a)return a;if(b)return b}return this.axiomOfInterest&&0<this.axiomOfInterest.equivalence?[this.axiomOfInterest.axiom]:null}}
class Negation extends Evaluatable{constructor(a){super(!0);const b=a.actualEvaluatable;this.evaluatable=b.isUnary?b:a.isUnary?a:new SubExpression(b)}equals(a){if(!(a instanceof Evaluatable))return!1;a=a.actualEvaluatable;return a instanceof Negation&&this.evaluatable.equals(a.evaluatable)}computeString(a){return TokenStrings.Negation+this.evaluatable.toString(a)}checkIfAxiomIsOfInterest(a){this.evaluatable.checkIfAxiomIsOfInterest(a)}collectVariables(a){this.evaluatable.collectVariables(a)}evaluateEquivalence(){return!this.evaluatable.evaluateEquivalence()}evaluateValueInternal(){const a=
this.evaluatable.evaluateValue();return null===a?null:!a}causesForEvaluation(){return this.evaluatable.causesForEvaluation()}get usedVariables(){return this.evaluatable.usedVariables}get sortedVariables(){return this.evaluatable.sortedVariables}}
class BlobDownloader{static alertNotSupported(){alert(Strings.BrowserNotSupported);return!1}static download(a,b){if(!BlobDownloader.supported)return!1;BlobDownloader.blobURL&&(URL.revokeObjectURL(BlobDownloader.blobURL),BlobDownloader.blobURL=null);if(BlobDownloader.saveAs)try{return BlobDownloader.saveAs.call(window.navigator,b,a),!0}catch(d){}const c=document.createElement("a");BlobDownloader.blobURL=URL.createObjectURL(b);c.href=BlobDownloader.blobURL;c.download=a;if(document.createEvent&&(window.MouseEvent||
window.MouseEvents))try{const d=document.createEvent("MouseEvents");d.initMouseEvent("click",!0,!1,window,0,0,0,0,0,!1,!1,!1,!1,0,null);c.dispatchEvent(d);return!0}catch(d){}c.click();return!0}}BlobDownloader.blobURL=null;BlobDownloader.saveAs=window.saveAs||window.webkitSaveAs||window.mozSaveAs||window.msSaveAs||window.navigator.saveBlob||window.navigator.webkitSaveBlob||window.navigator.mozSaveBlob||window.navigator.msSaveBlob;
BlobDownloader.supported="Blob"in window&&"URL"in window&&"createObjectURL"in window.URL&&"revokeObjectURL"in window.URL;Strings.init();Rule.init();
class UI{static createSession(a){a=window.ace.createEditSession(a);a.setMode("ace/mode/predicate");a.setTabSize(4);a.setUseSoftTabs(!1);a.setUseWrapMode(UI.wrapMode);a.getUndoManager().reset();return a}static fixDarkTheme(){let a=null,b=document.getElementById("style-dark-mode"),c=document.getElementById("metaColorScheme");switch(UI.theme){case "ace/theme/dracula":a="#282a36";break;case "ace/theme/mono_industrial":a="#222c28";break;case "ace/theme/monokai":a="#272822"}const d=document.getElementById("editorImgLogoGit");
a?(document.body.style.backgroundColor=a,d.setAttribute("src","assets/images/logo-github-w.png?1"),c&&c.setAttribute("content","dark"),b||(b=document.createElement("link"),b.setAttribute("id","style-dark-mode"),b.setAttribute("rel","stylesheet"),b.setAttribute("href","assets/css/style-dark.css?v=1.0.2"),document.head.appendChild(b))):(document.body.style.backgroundColor="",d.setAttribute("src","assets/images/logo-github.png?1"),c&&c.setAttribute("content","light"),b&&document.head.removeChild(b))}static modalSaveShown(){UI.modalSaveFileName.focus()}static modalThemeShown(){UI.modalThemeSelect.focus()}static modalSaveFileNameKeyDown(a){"Enter"!==
a.key&&13!==a.keyCode||UI.modalSaveOk.click()}static editorActionFileLoadChange(){function a(){UI.loading=!1;UI.editorActionFileLoad.value="";alert(Strings.ErrorFileLoad)}if(UI.loading)UI.editorActionFileLoad.value="";else if("files"in UI.editorActionFileLoad){var b;if(UI.editorActionFileLoad.files&&UI.editorActionFileLoad.files.length&&(b=UI.editorActionFileLoad.files[0]))if(b.name.toLowerCase().endsWith(".txt")){UI.stop();UI.loading=!0;try{const c=new FileReader;c.onerror=a;c.onload=function(){UI.loading=
!1;UI.editorActionFileLoad.value="";UI.editSession.setValue(c.result)};c.readAsText(b)}catch(c){a()}}else UI.editorActionFileLoad.value="",alert(Strings.ErrorInvalidFileName);else UI.editorActionFileLoad.value=""}else alert(Strings.ErrorNoFile)}static prepareSW(){"serviceWorker"in navigator&&(window.addEventListener("beforeinstallprompt",function(a){"preventDefault"in a&&a.preventDefault();UI.installationPrompt=a;document.getElementById("editorActionInstallSeparator").style.display="";document.getElementById("editorActionInstallItem").style.display=
""}),navigator.serviceWorker.register("/labs-predicate/sw.js"))}static init(){"localStorage"in window&&BlobDownloader.supported||BlobDownloader.alertNotSupported();UI.prepareSW();UI.theme=localStorage.getItem("theme")||"ace/theme/labs";UI.fixDarkTheme();UI.editor.setOptions({selectionStyle:"text",highlightActiveLine:!0,highlightSelectedWord:!0,readOnly:!1,cursorStyle:"ace",mergeUndoDeltas:!0,behavioursEnabled:!1,wrapBehavioursEnabled:!1,autoScrollEditorIntoView:!1,copyWithEmptySelection:!1,useSoftTabs:!1,
navigateWithinSoftTabs:!1,enableMultiselect:!0,hScrollBarAlwaysVisible:!1,vScrollBarAlwaysVisible:!1,highlightGutterLine:!0,animatedScroll:!1,showInvisibles:!1,showPrintMargin:!1,fadeFoldWidgets:!1,showFoldWidgets:!0,showLineNumbers:!0,showGutter:!0,displayIndentGuides:!1,scrollPastEnd:!1,fixedWidthGutter:!0,theme:UI.theme,enableLiveAutocompletion:!1,keyboardHandler:"ace/keyboard/labs"});$("#modalSave").on("shown.bs.modal",UI.modalSaveShown);$("#modalTheme").on("shown.bs.modal",UI.modalThemeShown);
UI.modalSaveFileName.onkeydown=UI.modalSaveFileNameKeyDown;UI.editorActionFileLoad.onchange=UI.editorActionFileLoadChange;setTimeout(function(){document.body.style.visibility="";UI.editSession=UI.createSession(localStorage.getItem("code")||"");UI.stepSession=UI.createSession("");localStorage.getItem("wrapMode")&&UI.toggleWrapMode(!1);UI.editor.setSession(UI.editSession);UI.editor.focus();UI.editor.resize()},250)}static step(){if(!UI.steppingFinished&&!UI.loading){if(!UI.stepping){var a=UI.editSession.getValue();
localStorage.setItem("code",a);let b=null;try{UI.axiomContext=Parser.parse(a)}catch(c){b="formatMessage"in c?c.formatMessage():c.message||c.toString()}UI.stepSession.setValue(a+"\n####################"+(b?"\n\n# "+Strings.Oops+"\n# "+b:""));UI.stepSession.getUndoManager().reset();UI.btnStop.style.display="";UI.editor.setReadOnly(!0);UI.stepping=!0;UI.steppingFinished=!!b;UI.editor.setSession(UI.stepSession);if(b)return}try{const b=UI.axiomContext.step();if(b){let c=UI.stepSession.getValue();b.error?
(c+="\n\n# "+Strings.Oops+"\n# "+b.text,UI.steppingFinished=!0):c+="\n\n"+b.text+" # "+b.explanation;UI.stepSession.setValue(c)}else UI.steppingFinished=!0;!UI.steppingFinished||b&&b.error||UI.stepSession.setValue(UI.stepSession.getValue()+"\n\n# "+Strings.ICouldNotDeductAnythingElse)}catch(b){a="formatMessage"in b?b.formatMessage():b.message||b.toString(),UI.steppingFinished=!0,UI.stepSession.setValue(UI.stepSession.getValue()+"\n\n# "+Strings.Oops+"\n# "+a)}}}static stop(){UI.stepping&&!UI.loading&&
(UI.btnStop.style.display="none",UI.editor.setReadOnly(!1),UI.stepping=!1,UI.steppingFinished=!1,UI.editor.setSession(UI.editSession))}static clear(){UI.loading||(UI.stop(),UI.editSession.setValue(""))}static load(){UI.loading||UI.editorActionFileLoad.click()}static showModalSave(){UI.loading||(UI.stop(),$("#modalSave").modal({keyboard:!0,backdrop:!0}))}static save(){if(!UI.loading){var a=UI.modalSaveFileName.value.trim();if(a){var b=UI.editSession.getValue()||"\n";a.toLowerCase().endsWith(".txt")||
(a+=".txt");BlobDownloader.download(a,new Blob([new Uint8Array([239,187,191]),b],{type:"text/plain;charset=utf-8"}));$("#modalSave").modal("hide")}}}static showExplanation(){UI.loading||$("#modalExplanation").modal({keyboard:!0,backdrop:!0})}static install(){document.getElementById("editorActionInstallSeparator").style.display="none";document.getElementById("editorActionInstallItem").style.display="none";if(UI.installationPrompt){try{UI.installationPrompt.prompt()}catch(a){}UI.installationPrompt=
null}}static toggleWrapMode(a){UI.wrapMode=!UI.wrapMode;a&&(UI.wrapMode?localStorage.setItem("wrapMode","1"):localStorage.removeItem("wrapMode"));UI.editorActionToggleWrapModeIcon.className=UI.wrapMode?"fa fa-margin fa-check-square-o":"fa fa-margin fa-square-o";UI.editSession.setUseWrapMode(UI.wrapMode);UI.stepSession.setUseWrapMode(UI.wrapMode)}static showModalTheme(){UI.modalThemeSelect.value=UI.theme;$("#modalTheme").modal({keyboard:!0,backdrop:!0})}static setTheme(){UI.theme=UI.modalThemeSelect.value;
localStorage.setItem("theme",UI.theme);UI.editor.setTheme(UI.theme);UI.fixDarkTheme();$("#modalTheme").modal("hide")}}UI.btnStep=document.getElementById("btnStep");UI.btnStop=document.getElementById("btnStop");UI.modalSaveFileName=document.getElementById("modalSaveFileName");UI.modalSaveOk=document.getElementById("modalSaveOk");UI.editorActionToggleWrapModeIcon=document.getElementById("editorActionToggleWrapModeIcon");UI.modalThemeSelect=document.getElementById("modalThemeSelect");
UI.editorActionFileLoad=document.getElementById("editorActionFileLoad");UI.editor=window.ace.edit("editor");UI.installationPrompt=null;UI.loading=!1;UI.stepping=!1;UI.steppingFinished=!1;UI.init();
